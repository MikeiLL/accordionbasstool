/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClickChordMatcher.java
 *
 * Created on Jan 12, 2011, 6:25:12 PM
 */
package app;

import java.util.Vector;
import javax.swing.DefaultListSelectionModel;
import music.BoardRegistry;
import music.BoardRegistry.BoardDef;
import music.ParsedChordDef;
import render.BoardMouseListener;
import render.RenderBassBoard;
import render.RenderBoardHeader;
import render.SeqColumnModel;
import render.SoundController;

/**
 *
 * @author Ilya
 */
public class ClickChordMatcher extends javax.swing.JApplet
{

  BoardMouseListener mouseListener;
  SeqColumnModel columnModel;

  /** Initializes the applet ClickChordMatcher */
  public void init()
  {
    app.Main.setNimbus();

    try {
      java.awt.EventQueue.invokeAndWait(new Runnable()
      {

        public void run()
        {
          initComponents();
          initClientApplet();
        }
      });
    } catch (Exception ex) {
      ex.printStackTrace();
    }
  }

  protected void initClientApplet()
  {
    AppletController controller = new AppletController(this);

    RenderBassBoard renderBoard = RenderBassBoard.getStaticRenderBoard();

    columnModel = new SeqColumnModel(renderBoard, new DefaultListSelectionModel());
    columnModel.addColumn(ParsedChordDef.newEmptyChordDef(), 0);

    SoundController sound = new SoundController(false);
    //sound.setEnabled(checkSoundEnabled.isSelected());

    Vector<BoardDef> allowedBoards = BoardRegistry.mainRegistry().getStandardBoards();

    mouseListener = new BoardMouseListener(renderBoard, columnModel, sound);

    RenderBoardHeader header = this.renderBoardControl.getHeader();
    header.initBoardHeader(renderBoard, renderBoardControl, columnModel, allowedBoards);
    header.selectFirstBoardByBassCount(48);

    //transposePanel.setSeqColModel(columnModel);
    this.chordsSelInfoPanel1.init(columnModel);


    //header.getExtPanel().add(checkSoundEnabled);
    //header.getExtPanel().add(checkVertical);
  }

  /** This method is called from within the init() method to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    renderBoardControl = new render.RenderBoardControl();
    chordsSelInfoPanel1 = new render.ChordsSelInfoPanel();

    setName("Accordion Board Clicker"); // NOI18N

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(renderBoardControl, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
      .addComponent(chordsSelInfoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(chordsSelInfoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(renderBoardControl, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private render.ChordsSelInfoPanel chordsSelInfoPanel1;
  private javax.swing.JPanel jPanel1;
  private render.RenderBoardControl renderBoardControl;
  // End of variables declaration//GEN-END:variables
}
