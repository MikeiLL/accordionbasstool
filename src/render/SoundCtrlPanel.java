/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SoundCtrlPanel.java
 *
 * Created on Jan 22, 2011, 2:09:59 PM
 */
package render;

import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;

/**
 *
 * @author Ilya
 */
public class SoundCtrlPanel extends javax.swing.JPanel implements MenuElement
{

  SoundController sound;

  /** Creates new form SoundCtrlPanel */
  public SoundCtrlPanel()
  {
    initComponents();
  }

  public void init(SoundController sound)
  {
    this.sound = sound;
    this.checkSound.setSelected(sound.soundEnabled);
    this.checkArpegg.setSelected(sound.arpeggiating);
  }

  @Override
  public Component getComponent()
  {
    return this;
  }

  @Override
  public MenuElement[] getSubElements()
  {
    return new MenuElement[0];
  }

  @Override
  public void menuSelectionChanged(boolean isIncluded)
  {
  }

  @Override
  public void processKeyEvent(KeyEvent event, MenuElement[] path, MenuSelectionManager manager)
  {
    this.processKeyEvent(event);
  }

  @Override
  public void processMouseEvent(MouseEvent event, MenuElement[] path, MenuSelectionManager manager)
  {
//    if (event.getID() == MouseEvent.MOUSE_ENTERED) {
//      MenuElement[] newPath = new MenuElement[path.length + 1];
//      System.arraycopy(path, 0, newPath, 0, path.length);
//      newPath[path.length] = this;
//      manager.setSelectedPath(newPath);
//    }
//
//    if (event.getID() == MouseEvent.MOUSE_EXITED) {
//      MenuElement[] newPath = new MenuElement[path.length - 1];
//      System.arraycopy(path, 0, newPath, 0, path.length - 1);
//      manager.setSelectedPath(newPath);
//    }

//    this.processMouseMotionEvent(event);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    checkSound = new javax.swing.JCheckBox();
    volumeSlider = new javax.swing.JSlider();
    checkArpegg = new javax.swing.JCheckBox();

    setOpaque(false);

    checkSound.setText("Sound Enabled");
    checkSound.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        checkSoundItemStateChanged(evt);
      }
    });

    volumeSlider.setMaximum(127);
    volumeSlider.setToolTipText("Sound Volume");
    volumeSlider.setValue(64);
    volumeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        volumeSliderStateChanged(evt);
      }
    });

    checkArpegg.setText("Arpeggiate Chords");
    checkArpegg.setActionCommand("Arepggiate Chords");
    checkArpegg.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        checkArpeggActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 135, Short.MAX_VALUE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addContainerGap()
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(checkSound, javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(volumeSlider, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
              .addComponent(checkArpegg, javax.swing.GroupLayout.Alignment.LEADING)))
          .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 85, Short.MAX_VALUE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addContainerGap()
          .addComponent(checkSound)
          .addComponent(volumeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
          .addComponent(checkArpegg)
          .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );
  }// </editor-fold>//GEN-END:initComponents

    private void checkSoundItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_checkSoundItemStateChanged
    {//GEN-HEADEREND:event_checkSoundItemStateChanged
      if (sound != null) {
        sound.setEnabled(evt.getStateChange() == ItemEvent.SELECTED);
      }
}//GEN-LAST:event_checkSoundItemStateChanged

    private void volumeSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_volumeSliderStateChanged
    {//GEN-HEADEREND:event_volumeSliderStateChanged
      if (sound != null) {
        sound.setVolume(volumeSlider.getValue());
      }
}//GEN-LAST:event_volumeSliderStateChanged

    private void checkArpeggActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_checkArpeggActionPerformed
    {//GEN-HEADEREND:event_checkArpeggActionPerformed
      if (sound != null) {
        sound.setArpeggiating(checkArpegg.isSelected());
      }
}//GEN-LAST:event_checkArpeggActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox checkArpegg;
  private javax.swing.JCheckBox checkSound;
  private javax.swing.JSlider volumeSlider;
  // End of variables declaration//GEN-END:variables
}
