/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SeqTablePanel.java
 *
 * Created on Oct 23, 2010, 4:14:34 PM
 */
package render;

import java.awt.event.ActionEvent;
import javax.swing.Timer;
import javax.swing.AbstractAction;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import music.ChordRegistry;
import music.ParsedChordDef;

/**
 *
 * @author Ilya
 */
public class SeqTablePanel extends javax.swing.JPanel implements ListSelectionListener
{

  SeqColumnModel columnModel;
  ChordTableAction chordTableAction;
  Timer playTimer;

  /** Creates new form SeqTablePanel */
  public SeqTablePanel()
  {
    initComponents();

    ChordRegistry.mainRegistry();

    SeqViewerController seqViewer = new SeqViewerController(seqTable, seqTableScrollPane);
    columnModel = seqViewer.columnModel;
    columnModel.selComboModel.addListSelectionListener(this);

    chordTableAction = new ChordTableAction();
    toolAddChord.addActionListener(chordTableAction);
    toolInsert.addActionListener(chordTableAction);
    toolRemove.addActionListener(chordTableAction);
    toolPlay.addActionListener(chordTableAction);
    toolOptions.addActionListener(chordTableAction);

    playTimer = new Timer(1000, chordTableAction);
    playTimer.setActionCommand("Timer");

    columnModel.addColumn(ParsedChordDef.getDefaultChordDef(), 0);

    toolOptions.setVisible(false);
  }

  void initChordPicker(ChordPicker picker)
  {
    picker.init();
    picker.changeChordSet(true);
    picker.setSeqColModel(columnModel);
    //columnModel.addColumn(picker.getPickedChord(), 0);
  }

  void initTextParser(TextParserPanel textParser)
  {
    textParser.setSeqColModel(columnModel, seqTable, null);
  }

  @Override
  public void valueChanged(ListSelectionEvent e)
  {
    statusText.setText("<html>Complete Sequence: " + columnModel.toHtmlString(true) + "</html>");
  }



  class ChordTableAction extends AbstractAction
  {

    @Override
    public void actionPerformed(ActionEvent e)
    {
      if (e.getActionCommand().equals("AddChord")) {
        columnModel.addColumn(ParsedChordDef.getDefaultChordDef(), columnModel.getColumnCount());

      } else if (e.getActionCommand().equals("InsertChord")) {
        int index = columnModel.getSelectedColumn();
        if (index >= 0) {
          columnModel.addColumn(ParsedChordDef.getDefaultChordDef(), index);
        }

      } else if (e.getActionCommand().equals("RemoveChord")) {
        columnModel.removeSelectedColumn();
      } else if (e.getActionCommand().equals("Options")) {
        new OptionsDialog(null, true).setVisible(true);
      } else if (e.getActionCommand().equals("PlaySeq")) {
        if (!playTimer.isRunning()) {
          toolPlay.setText("Stop Sequence");
          playTimer.start();
        } else {
          toolPlay.setText("Play Sequence");
          playTimer.stop();
        }
      } else if (e.getActionCommand().equals("Timer")) {
        int index = columnModel.getSelectedColumn();

        index++;
        if (index >= columnModel.getColumnCount()) {
          index = 0;
        }

        columnModel.selComboModel.setSelectionInterval(index, index);
        seqTable.scrollRectToVisible(seqTable.getCellRect(seqTable.getSelectedRow(), index, true));
      }
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    toolOptions = new javax.swing.JButton();
    toggleChordPicker = new javax.swing.JButton();
    toolAddChord = new javax.swing.JButton();
    toolInsert = new javax.swing.JButton();
    toolRemove = new javax.swing.JButton();
    seqTableScrollPane = new javax.swing.JScrollPane();
    seqTable = new javax.swing.JTable();
    toolPlay = new javax.swing.JButton();
    statusText = new javax.swing.JLabel();

    toolOptions.setAction(chordTableAction);
    toolOptions.setText("Options...");
    toolOptions.setActionCommand("Options");

    toggleChordPicker.setFont(toggleChordPicker.getFont().deriveFont(toggleChordPicker.getFont().getStyle() | java.awt.Font.BOLD));
    toggleChordPicker.setText("Hide Editor >>");

    toolAddChord.setAction(chordTableAction);
    toolAddChord.setText("Add Chord");
    toolAddChord.setActionCommand("AddChord");
    toolAddChord.setFocusable(false);
    toolAddChord.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolAddChord.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

    toolInsert.setAction(chordTableAction);
    toolInsert.setText("Insert Chord");
    toolInsert.setActionCommand("InsertChord");
    toolInsert.setFocusable(false);
    toolInsert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolInsert.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

    toolRemove.setAction(chordTableAction);
    toolRemove.setText("Remove Chord");
    toolRemove.setActionCommand("RemoveChord");
    toolRemove.setFocusable(false);
    toolRemove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolRemove.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

    seqTable.setAutoCreateColumnsFromModel(false);
    seqTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    seqTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    seqTable.setRowHeight(24);
    seqTableScrollPane.setViewportView(seqTable);

    toolPlay.setAction(chordTableAction);
    toolPlay.setText("Play Sequence");
    toolPlay.setActionCommand("PlaySeq");
    toolPlay.setFocusable(false);
    toolPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

    statusText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
    statusText.setText("Status");
    statusText.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(163, 163, 163)
        .addComponent(toolPlay)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
        .addComponent(toggleChordPicker))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(seqTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(toolRemove)
          .addComponent(toolInsert)
          .addComponent(toolAddChord)
          .addComponent(toolOptions))
        .addGap(2, 2, 2))
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(statusText, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(toggleChordPicker)
          .addComponent(toolPlay))
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(49, 49, 49)
            .addComponent(toolAddChord)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(toolInsert)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(toolRemove)
            .addGap(38, 38, 38)
            .addComponent(toolOptions))
          .addGroup(layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addComponent(seqTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(statusText, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTable seqTable;
  private javax.swing.JScrollPane seqTableScrollPane;
  private javax.swing.JLabel statusText;
  javax.swing.JButton toggleChordPicker;
  private javax.swing.JButton toolAddChord;
  private javax.swing.JButton toolInsert;
  private javax.swing.JButton toolOptions;
  private javax.swing.JButton toolPlay;
  private javax.swing.JButton toolRemove;
  // End of variables declaration//GEN-END:variables
}
