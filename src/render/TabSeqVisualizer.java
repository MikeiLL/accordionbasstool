/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TabSeqVisualizer.java
 *
 * Created on Oct 16, 2010, 1:43:06 PM
 */
package render;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Timer;

/**
 *
 * @author Ilya
 */
public class TabSeqVisualizer extends javax.swing.JPanel
{

  SeqColumnModel columnModel;
  ChordTableAction chordTableAction;
  Timer playTimer;

  /** Creates new form TabSeqVisualizer */
  public TabSeqVisualizer()
  {
    initComponents();

    chordPicker1.init();
    chordPicker1.changeChordSet(true);

    SeqViewerController seqViewer = new SeqViewerController(seqTable, jScrollPane2);
    columnModel = seqViewer.columnModel;

    chordPicker1.setSeqColModel(columnModel);

    columnModel.addColumn(chordPicker1.getPickedChord(), 0);

    chordTableAction = new ChordTableAction();
    toolAddChord.addActionListener(chordTableAction);
    toolInsert.addActionListener(chordTableAction);
    toolRemove.addActionListener(chordTableAction);
    toolPlay.addActionListener(chordTableAction);
    toolOptions.addActionListener(chordTableAction);

    playTimer = new Timer(1000, chordTableAction);
    playTimer.setActionCommand("Timer");
  }

  class ChordTableAction extends AbstractAction
  {

    @Override
    public void actionPerformed(ActionEvent e)
    {
      if (e.getActionCommand().equals("AddChord")) {
        columnModel.addColumn(chordPicker1.getPickedChord(), columnModel.getColumnCount());
      } else if (e.getActionCommand().equals("InsertChord")) {
        int index = columnModel.getSelectedColumn();
        if (index >= 0) {
          columnModel.addColumn(chordPicker1.getPickedChord(), index);
        }
      } else if (e.getActionCommand().equals("RemoveChord")) {
        columnModel.removeSelectedColumn();
      } else if (e.getActionCommand().equals("Options"))
      {
        new OptionsDialog(null, true).setVisible(true);
      } else if (e.getActionCommand().equals("PlaySeq")) {
        if (!playTimer.isRunning()) {
          toolPlay.setText("Stop Sequence");
          playTimer.start();
        } else {
          toolPlay.setText("Play Sequence");
          playTimer.stop();
        }
      } else if (e.getActionCommand().equals("Timer"))
      {
        int index = columnModel.getSelectedColumn();

        index++;
        if (index >= columnModel.getColumnCount())
          index = 0;

        columnModel.selComboModel.setSelectionInterval(index, index);
      }
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane2 = new javax.swing.JScrollPane();
    seqTable = new javax.swing.JTable();
    chordPicker1 = new render.ChordPicker();
    jToolBar1 = new javax.swing.JToolBar();
    toggleChordPicker = new javax.swing.JButton();
    jSeparator2 = new javax.swing.JToolBar.Separator();
    toolAddChord = new javax.swing.JButton();
    toolInsert = new javax.swing.JButton();
    toolRemove = new javax.swing.JButton();
    jSeparator1 = new javax.swing.JToolBar.Separator();
    toolPlay = new javax.swing.JButton();
    jSeparator3 = new javax.swing.JToolBar.Separator();
    toolOptions = new javax.swing.JButton();

    addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentShown(java.awt.event.ComponentEvent evt) {
        formComponentShown(evt);
      }
    });

    seqTable.setAutoCreateColumnsFromModel(false);
    seqTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    seqTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    seqTable.setRowHeight(24);
    jScrollPane2.setViewportView(seqTable);

    jToolBar1.setFloatable(false);
    jToolBar1.setRollover(true);

    toggleChordPicker.setFont(toggleChordPicker.getFont().deriveFont(toggleChordPicker.getFont().getStyle() | java.awt.Font.BOLD));
    toggleChordPicker.setText("<< Hide Editor");
    toggleChordPicker.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        toggleChordPickerActionPerformed(evt);
      }
    });
    jToolBar1.add(toggleChordPicker);
    jToolBar1.add(jSeparator2);

    toolAddChord.setAction(chordTableAction);
    toolAddChord.setText("Add Chord");
    toolAddChord.setActionCommand("AddChord");
    toolAddChord.setFocusable(false);
    toolAddChord.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolAddChord.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(toolAddChord);

    toolInsert.setAction(chordTableAction);
    toolInsert.setText("Insert Chord");
    toolInsert.setActionCommand("InsertChord");
    toolInsert.setFocusable(false);
    toolInsert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolInsert.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(toolInsert);

    toolRemove.setAction(chordTableAction);
    toolRemove.setText("Remove Chord");
    toolRemove.setActionCommand("RemoveChord");
    toolRemove.setFocusable(false);
    toolRemove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolRemove.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(toolRemove);
    jToolBar1.add(jSeparator1);

    toolPlay.setAction(chordTableAction);
    toolPlay.setText("Play Sequence");
    toolPlay.setActionCommand("PlaySeq");
    toolPlay.setFocusable(false);
    toolPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    toolPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(toolPlay);
    jToolBar1.add(jSeparator3);

    toolOptions.setAction(chordTableAction);
    toolOptions.setText("Options...");
    toolOptions.setActionCommand("Options");
    toolOptions.setEnabled(false);
    jToolBar1.add(toolOptions);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addComponent(chordPicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE))
          .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
          .addComponent(chordPicker1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(50, 50, 50))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
  {//GEN-HEADEREND:event_formComponentShown
  }//GEN-LAST:event_formComponentShown

  private void toggleChordPickerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_toggleChordPickerActionPerformed
  {//GEN-HEADEREND:event_toggleChordPickerActionPerformed
    // TODO add your handling code here:
    if (chordPicker1.isVisible()) {
      chordPicker1.setVisible(false);
      toggleChordPicker.setText(">> Show Editor");
    } else {
      chordPicker1.setVisible(true);
      toggleChordPicker.setText("<< Hide Editor");
    }
  }//GEN-LAST:event_toggleChordPickerActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private render.ChordPicker chordPicker1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JToolBar.Separator jSeparator1;
  private javax.swing.JToolBar.Separator jSeparator2;
  private javax.swing.JToolBar.Separator jSeparator3;
  private javax.swing.JToolBar jToolBar1;
  private javax.swing.JTable seqTable;
  private javax.swing.JButton toggleChordPicker;
  private javax.swing.JButton toolAddChord;
  private javax.swing.JButton toolInsert;
  private javax.swing.JButton toolOptions;
  private javax.swing.JButton toolPlay;
  private javax.swing.JButton toolRemove;
  // End of variables declaration//GEN-END:variables
}
