/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TabButtonClicker.java
 *
 * Created on Dec 24, 2010, 8:19:14 PM
 */
package render;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Vector;
import music.BassBoard;
import music.ButtonCombo;

/**
 *
 * @author Ilya
 */
public class TabButtonClicker extends javax.swing.JPanel
{

  RenderBassBoard renderBoard;
  SelectedButtonCombo localButtonCombo;
  ButtonCombo clickCombo;
  Vector<BassBoard.Pos> activeButtons;
  int clickIndex;
  BoardMouseListener listener;

  SeqColumnModel columnModel;

  /** Creates new form TabButtonClicker */
  public TabButtonClicker()
  {
    initComponents();

    localButtonCombo = new SelectedButtonCombo();

    activeButtons = new Vector<BassBoard.Pos>();

    renderBoard = BassToolFrame.getRenderBoard();

    listener = new BoardMouseListener();
  }

  public void setSeqColModel(SeqColumnModel model)
  {
    columnModel = model;
  }

  @Override
  public void setVisible(boolean b)
  {
    if (b) {
      renderBoard.setSelectedButtonCombo(localButtonCombo);

      renderBoard.addMouseListener(listener);
      renderBoard.addMouseMotionListener(listener);
    } else {
      if (columnModel != null) {
        renderBoard.setSelectedButtonCombo(columnModel.selComboModel);
      }
      
      renderBoard.removeMouseListener(listener);
      renderBoard.removeMouseMotionListener(listener);
    }

    super.setVisible(b);
  }

  private void updateCombo()
  {
    BassBoard.Pos allPos[] = new BassBoard.Pos[activeButtons.size()];
    activeButtons.toArray(allPos);
    clickCombo = new ButtonCombo(allPos, renderBoard.getBassBoard());
    localButtonCombo.setButtonCombo(clickCombo);
    clickedLabel.setText("<html>" + clickCombo.toButtonListingString(true) + "</html>");
  }

  class BoardMouseListener extends MouseAdapter
  {
    @Override
    public void mouseDragged(MouseEvent e)
    {
      if (clickIndex >= 0) {
        BassBoard.Pos clickPos = renderBoard.hitTest(e);
        if ((clickPos != null) && !activeButtons.contains(clickPos)) {
          activeButtons.setElementAt(clickPos, clickIndex);
        }
      }

      updateCombo();
    }

    @Override
    public void mousePressed(MouseEvent e)
    {
      BassBoard.Pos clickPos = renderBoard.hitTest(e);
      clickIndex = activeButtons.indexOf(clickPos);

      if (clickIndex < 0) {
        clickIndex = activeButtons.size();
        activeButtons.addElement(clickPos);
      } else {
        activeButtons.remove(clickIndex);
        clickIndex = -1;
      }
      updateCombo();
    }

    @Override
    public void mouseReleased(MouseEvent e)
    {
      super.mouseReleased(e);
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    clickedLabel = new javax.swing.JLabel();
    buttonClear = new javax.swing.JButton();

    clickedLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    clickedLabel.setText("None");
    clickedLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Buttons Selected on Board:"));

    buttonClear.setText("Clear");
    buttonClear.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        buttonClearActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(clickedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
          .addComponent(buttonClear))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(clickedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(buttonClear)
        .addContainerGap(202, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void buttonClearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonClearActionPerformed
  {//GEN-HEADEREND:event_buttonClearActionPerformed
    activeButtons.removeAllElements();
    updateCombo();
  }//GEN-LAST:event_buttonClearActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonClear;
  private javax.swing.JLabel clickedLabel;
  // End of variables declaration//GEN-END:variables
}
