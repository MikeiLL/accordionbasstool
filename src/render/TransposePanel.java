/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TransposePanel.java
 *
 * Created on Dec 8, 2010, 3:46:43 PM
 */
package render;

import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.SpinnerListModel;
import music.Interval;
import music.NamedInterval;

/**
 *
 * @author Ilya
 */
public class TransposePanel extends javax.swing.JPanel implements MenuElement
{
  
  SeqColumnModel columnModel;


  /** Creates new form TransposePanel */
  public TransposePanel()
  {
    initComponents();

    //ivalCombo.setModel(new DefaultComboBoxModel(NamedInterval.values()));
    //ivalCombo.setSelectedItem(NamedInterval.P5);
    SpinnerListModel model = new SpinnerListModel(NamedInterval.values());
    ivalSpinner.setModel(model);
    model.setValue(NamedInterval.P5);
  }
  
  public void init(SeqColumnModel model)
  {
    columnModel = model;
  }

  public Interval getCurrInterval()
  {
    //NamedInterval entry = (NamedInterval)ivalCombo.getSelectedItem();
    NamedInterval entry = (NamedInterval)ivalSpinner.getValue();
    return entry.interval;
  }

  @Override
  public Component getComponent()
  {
    return this;
  }

  @Override
  public MenuElement[] getSubElements()
  {
    return new MenuElement[0];
  }

  @Override
  public void menuSelectionChanged(boolean isIncluded)
  {
    
  }

  @Override
  public void processKeyEvent(KeyEvent event, MenuElement[] path, MenuSelectionManager manager)
  {
    this.processKeyEvent(event);
  }

  @Override
  public void processMouseEvent(MouseEvent event, MenuElement[] path, MenuSelectionManager manager)
  {
    if (event.getID() == MouseEvent.MOUSE_ENTERED) {
      MenuElement[] newPath = new MenuElement[path.length + 1];
      System.arraycopy(path, 0, newPath, 0, path.length);
      newPath[path.length] = this;
      manager.setSelectedPath(newPath);
    }

    if (event.getID() == MouseEvent.MOUSE_EXITED) {
      MenuElement[] newPath = new MenuElement[path.length - 1];
      System.arraycopy(path, 0, newPath, 0, path.length - 1);
      manager.setSelectedPath(newPath);
    }
    
    //this.processMouseMotionEvent(event);
  }



  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jButton1 = new javax.swing.JButton();
    downButton = new javax.swing.JButton();
    upButton = new javax.swing.JButton();
    ivalSpinner = new javax.swing.JSpinner();

    jButton1.setText("jButton1");

    setOpaque(false);

    downButton.setText("Down");
    downButton.setFocusable(false);
    downButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    downButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    downButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        downButtonActionPerformed(evt);
      }
    });

    upButton.setText("Up");
    upButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        upButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(ivalSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(downButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(upButton, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(ivalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(7, 7, 7)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(downButton)
          .addComponent(upButton)))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void downButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_downButtonActionPerformed
  {//GEN-HEADEREND:event_downButtonActionPerformed
    columnModel.transposeAllByInterval(getCurrInterval().scale(-1));
  }//GEN-LAST:event_downButtonActionPerformed

  private void upButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_upButtonActionPerformed
  {//GEN-HEADEREND:event_upButtonActionPerformed
    columnModel.transposeAllByInterval(getCurrInterval());
  }//GEN-LAST:event_upButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton downButton;
  private javax.swing.JSpinner ivalSpinner;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton upButton;
  // End of variables declaration//GEN-END:variables
}
